https://aws.amazon.com/blogs/containers/backup-and-restore-your-amazon-eks-cluster-resources-using-velero/

Create an S3 Bucket to store backups
  Replace <BUCKETNAME> and <REGION> with your own values below.
  BUCKET=<BUCKETNAME>
  REGION=<REGION>
  aws s3 mb s3://$BUCKET --region $REGION
Create IAM Policy
      cat > velero_policy.json <<EOF
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "ec2:DescribeVolumes",
                      "ec2:DescribeSnapshots",
                      "ec2:CreateTags",
                      "ec2:CreateVolume",
                      "ec2:CreateSnapshot",
                      "ec2:DeleteSnapshot"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "s3:GetObject",
                      "s3:DeleteObject",
                      "s3:PutObject",
                      "s3:AbortMultipartUpload",
                      "s3:ListMultipartUploadParts"
                  ],
                  "Resource": [
                      "arn:aws:s3:::${BUCKET}/*"
                  ]
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "s3:ListBucket"
                  ],
                  "Resource": [
                      "arn:aws:s3:::${BUCKET}"
                  ]
              }
          ]
      }
      EOF
      
      aws iam create-policy \
          --policy-name VeleroAccessPolicy \
          --policy-document file://velero_policy.json
Create Service Accounts for Velero
  PRIMARY_CLUSTER=<CLUSTERNAME>
RECOVERY_CLUSTER=<CLUSTERNAME>
ACCOUNT=$(aws sts get-caller-identity --query Account --output text)

eksctl create iamserviceaccount \
    --cluster=$PRIMARY_CLUSTER \
    --name=velero-server \
    --namespace=velero \
    --role-name=eks-velero-backup \
    --role-only \
    --attach-policy-arn=arn:aws:iam::$ACCOUNT:policy/VeleroAccessPolicy \
    --approve

eksctl create iamserviceaccount \
    --cluster=$RECOVERY_CLUSTER \
    --name=velero-server \
    --namespace=velero \
    --role-name=eks-velero-recovery \
    --role-only \
    --attach-policy-arn=arn:aws:iam::$ACCOUNT:policy/VeleroAccessPolicy \
    --approve


Install Velero in both EKS Clusters
      helm repo add vmware-tanzu https://vmware-tanzu.github.io/helm-charts
      
      cat > values.yaml <<EOF
      configuration:
        backupStorageLocation:
        - bucket: $BUCKET
          provider: aws
        volumeSnapshotLocation:
        - config:
            region: $REGION
          provider: aws
      initContainers:
      - name: velero-plugin-for-aws
        image: velero/velero-plugin-for-aws:v1.7.1
        volumeMounts:
        - mountPath: /target
          name: plugins
      credentials:
        useSecret: false
      serviceAccount:
        server:
          annotations:
            eks.amazonaws.com/role-arn: "arn:aws:iam::${ACCOUNT}:role/eks-velero-backup"
      EOF
      
      cat > values_recovery.yaml <<EOF
      configuration:
        backupStorageLocation:
        - bucket: $BUCKET
          provider: aws
        volumeSnapshotLocation:
        - config:
            region: $REGION
          provider: aws
      initContainers:
      - name: velero-plugin-for-aws
        image: velero/velero-plugin-for-aws:v1.7.1
        volumeMounts:
        - mountPath: /target
          name: plugins
      credentials:
        useSecret: false
      serviceAccount:
        server:
          annotations:
            eks.amazonaws.com/role-arn: "arn:aws:iam::${ACCOUNT}:role/eks-velero-recovery"
      EOF


*************************************************************************************************************************
Replicate code commit to different region:
https://medium.com/geekculture/replicate-aws-codecommit-repositories-between-regions-using-codebuild-and-codepipeline-39f6b8fcefd2


https://aws.amazon.com/blogs/containers/backup-and-restore-your-amazon-eks-cluster-resources-using-velero/

https://chocolatey.org/install
choco install velero
BUCKET=aws-velero-backup
REGION=us-east-2
aws s3 mb s3://$BUCKET --region $REGION

aws iam create-policy     --policy-name VeleroAccessPolicy     --policy-document file://velero_policy.json

PRIMARY_CLUSTER=<CLUSTERNAME>
RECOVERY_CLUSTER=DR-AWSBAK8SPROD001
ACCOUNT=$(aws sts get-caller-identity --query Account --output text)


eksctl create iamserviceaccount \
--cluster= DR-AWSBAK8SPROD001 \
--name=velero-server \
--namespace=velero \
--role-name=eks-velero-recovery \
--role-only \
--attach-policy-arn=arn:aws:iam:: 026280443682:policy/VeleroAccessPolicy \
--approve
Install the Velero in the second cluster:
velero install --provider aws --plugins velero/velero-plugin-for-aws:v1.0.1 --bucket dr-k8s-eks-prod-backup --backup-location-config region=us-east-2 --snapshot-location-config region=us-east-2 --secret-file C:\\Users\\sonus\\.aws\\credentials


Uninstall Velero:
kubectl delete namespace/velero clusterrolebinding/velero

velero backup create test02 --include-namespaces inshura

velero schedule create daily-backup --schedule="0 3 * * *"
velero backup create --from-schedule daily-backup
velero restore create  --from-backup daily-backup-20220319034111
****************UNINSTALL VELERO**************
kubectl delete namespace/velero clusterrolebinding/velero
kubectl delete crds -l component=velero



velero install --provider aws --plugins velero/velero-plugin-for-aws:v1.0.1 --bucket awseksbackup --backup-location-config region=us-east-1 --snapshot-location-config region=us-east-1 --secret-file C:\Users\Lenovo\.aws\credentials


velero restore create --from-backup test1

schedule backup of namespace:
velero schedule create be-core-backup --schedule="0 3 * * *" --include-namespaces be-core

velero schedule create inshura-backup --schedule="0 3 * * *" --include-namespaces inshura
velero schedule create customer-engage-backup --schedule="0 3 * * *" --include-namespaces customer-engage
velero schedule create be-services-backup --schedule="0 3 * * *" --include-namespaces be-services	
velero schedule create be-web-backup --schedule="0 3 * * *" --include-namespaces be-web
